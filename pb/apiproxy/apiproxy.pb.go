// Code generated by protoc-gen-go. DO NOT EDIT.
// source: apiproxy/apiproxy.proto

package apiproxy

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type APIProxy struct {
	VNext                string   `protobuf:"bytes,1,opt,name=VNext,proto3" json:"VNext,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *APIProxy) Reset()         { *m = APIProxy{} }
func (m *APIProxy) String() string { return proto.CompactTextString(m) }
func (*APIProxy) ProtoMessage()    {}
func (*APIProxy) Descriptor() ([]byte, []int) {
	return fileDescriptor_e44b2a786b345062, []int{0}
}

func (m *APIProxy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_APIProxy.Unmarshal(m, b)
}
func (m *APIProxy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_APIProxy.Marshal(b, m, deterministic)
}
func (m *APIProxy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_APIProxy.Merge(m, src)
}
func (m *APIProxy) XXX_Size() int {
	return xxx_messageInfo_APIProxy.Size(m)
}
func (m *APIProxy) XXX_DiscardUnknown() {
	xxx_messageInfo_APIProxy.DiscardUnknown(m)
}

var xxx_messageInfo_APIProxy proto.InternalMessageInfo

func (m *APIProxy) GetVNext() string {
	if m != nil {
		return m.VNext
	}
	return ""
}

type APIProxy_Response struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *APIProxy_Response) Reset()         { *m = APIProxy_Response{} }
func (m *APIProxy_Response) String() string { return proto.CompactTextString(m) }
func (*APIProxy_Response) ProtoMessage()    {}
func (*APIProxy_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_e44b2a786b345062, []int{0, 0}
}

func (m *APIProxy_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_APIProxy_Response.Unmarshal(m, b)
}
func (m *APIProxy_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_APIProxy_Response.Marshal(b, m, deterministic)
}
func (m *APIProxy_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_APIProxy_Response.Merge(m, src)
}
func (m *APIProxy_Response) XXX_Size() int {
	return xxx_messageInfo_APIProxy_Response.Size(m)
}
func (m *APIProxy_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_APIProxy_Response.DiscardUnknown(m)
}

var xxx_messageInfo_APIProxy_Response proto.InternalMessageInfo

func init() {
	proto.RegisterType((*APIProxy)(nil), "apiproxy.APIProxy")
	proto.RegisterType((*APIProxy_Response)(nil), "apiproxy.APIProxy.Response")
}

func init() { proto.RegisterFile("apiproxy/apiproxy.proto", fileDescriptor_e44b2a786b345062) }

var fileDescriptor_e44b2a786b345062 = []byte{
	// 136 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4f, 0x2c, 0xc8, 0x2c,
	0x28, 0xca, 0xaf, 0xa8, 0xd4, 0x87, 0x31, 0xf4, 0x0a, 0x8a, 0xf2, 0x4b, 0xf2, 0x85, 0x38, 0x60,
	0x7c, 0x25, 0x1d, 0x2e, 0x0e, 0xc7, 0x00, 0xcf, 0x00, 0x10, 0x5b, 0x48, 0x84, 0x8b, 0x35, 0xcc,
	0x2f, 0xb5, 0xa2, 0x44, 0x82, 0x51, 0x81, 0x51, 0x83, 0x33, 0x08, 0xc2, 0x91, 0xe2, 0xe2, 0xe2,
	0x08, 0x4a, 0x2d, 0x2e, 0xc8, 0xcf, 0x2b, 0x4e, 0x35, 0x6a, 0x62, 0xe4, 0xe2, 0x0d, 0x33, 0x2a,
	0x4a, 0xac, 0x84, 0xeb, 0x31, 0xe3, 0x62, 0x76, 0x4c, 0x49, 0x11, 0x12, 0xd2, 0x83, 0xdb, 0x00,
	0x93, 0x92, 0x92, 0xc6, 0x14, 0xd3, 0x83, 0x99, 0x24, 0x64, 0xc9, 0xc5, 0x16, 0x94, 0x9a, 0x9b,
	0x5f, 0x96, 0x4a, 0xb2, 0xd6, 0x24, 0x36, 0xb0, 0x1f, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff,
	0x4e, 0x0f, 0x26, 0x02, 0xde, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// V2RayAPIProxyClient is the client API for V2RayAPIProxy service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type V2RayAPIProxyClient interface {
	Add(ctx context.Context, in *APIProxy, opts ...grpc.CallOption) (*APIProxy_Response, error)
	Remove(ctx context.Context, in *APIProxy, opts ...grpc.CallOption) (*APIProxy_Response, error)
}

type v2RayAPIProxyClient struct {
	cc *grpc.ClientConn
}

func NewV2RayAPIProxyClient(cc *grpc.ClientConn) V2RayAPIProxyClient {
	return &v2RayAPIProxyClient{cc}
}

func (c *v2RayAPIProxyClient) Add(ctx context.Context, in *APIProxy, opts ...grpc.CallOption) (*APIProxy_Response, error) {
	out := new(APIProxy_Response)
	err := c.cc.Invoke(ctx, "/apiproxy.V2rayAPIProxy/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *v2RayAPIProxyClient) Remove(ctx context.Context, in *APIProxy, opts ...grpc.CallOption) (*APIProxy_Response, error) {
	out := new(APIProxy_Response)
	err := c.cc.Invoke(ctx, "/apiproxy.V2rayAPIProxy/Remove", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// V2RayAPIProxyServer is the server API for V2RayAPIProxy service.
type V2RayAPIProxyServer interface {
	Add(context.Context, *APIProxy) (*APIProxy_Response, error)
	Remove(context.Context, *APIProxy) (*APIProxy_Response, error)
}

// UnimplementedV2RayAPIProxyServer can be embedded to have forward compatible implementations.
type UnimplementedV2RayAPIProxyServer struct {
}

func (*UnimplementedV2RayAPIProxyServer) Add(ctx context.Context, req *APIProxy) (*APIProxy_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Add not implemented")
}
func (*UnimplementedV2RayAPIProxyServer) Remove(ctx context.Context, req *APIProxy) (*APIProxy_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Remove not implemented")
}

func RegisterV2RayAPIProxyServer(s *grpc.Server, srv V2RayAPIProxyServer) {
	s.RegisterService(&_V2RayAPIProxy_serviceDesc, srv)
}

func _V2RayAPIProxy_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(APIProxy)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(V2RayAPIProxyServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apiproxy.V2rayAPIProxy/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(V2RayAPIProxyServer).Add(ctx, req.(*APIProxy))
	}
	return interceptor(ctx, in, info, handler)
}

func _V2RayAPIProxy_Remove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(APIProxy)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(V2RayAPIProxyServer).Remove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apiproxy.V2rayAPIProxy/Remove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(V2RayAPIProxyServer).Remove(ctx, req.(*APIProxy))
	}
	return interceptor(ctx, in, info, handler)
}

var _V2RayAPIProxy_serviceDesc = grpc.ServiceDesc{
	ServiceName: "apiproxy.V2rayAPIProxy",
	HandlerType: (*V2RayAPIProxyServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _V2RayAPIProxy_Add_Handler,
		},
		{
			MethodName: "Remove",
			Handler:    _V2RayAPIProxy_Remove_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "apiproxy/apiproxy.proto",
}
